"use strict";
"use strict";

// üìå DOM Elements
const importBtn = document.getElementById("import-btn");
const exportBtn = document.getElementById("export-btn");
const fileInput = document.getElementById("input-file");

// üì§ **EXPORT DATA (T·∫£i file JSON)**
exportBtn.addEventListener("click", function () {
  const jsonData = JSON.stringify(petArr, null, 2); // Format JSON ƒë·∫πp h∆°n
  const blob = new Blob([jsonData], { type: "application/json" });
  const a = document.createElement("a");
  a.href = URL.createObjectURL(blob);
  a.download = "pet_data.json"; // ƒê·∫∑t t√™n file t·∫£i xu·ªëng
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  alert("Export th√†nh c√¥ng! File ƒë√£ ƒë∆∞·ª£c t·∫£i xu·ªëng.");
});

// üì• **IMPORT DATA (ƒê·ªçc file JSON & c·∫≠p nh·∫≠t)**
importBtn.addEventListener("click", function () {
  const file = fileInput.files[0];

  if (!file) {
    alert("Vui l√≤ng ch·ªçn file JSON ƒë·ªÉ nh·∫≠p d·ªØ li·ªáu.");
    return;
  }

  const reader = new FileReader();
  reader.onload = function (event) {
    try {
      const importedData = JSON.parse(event.target.result);

      // Ki·ªÉm tra d·ªØ li·ªáu h·ª£p l·ªá
      if (!Array.isArray(importedData)) {
        throw new Error("D·ªØ li·ªáu kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng!");
      }

      // Ki·ªÉm tra t·ª´ng ƒë·ªëi t∆∞·ª£ng trong danh s√°ch
      importedData.forEach((pet) => {
        if (!pet.id || !pet.name || !pet.type || !pet.breed || !pet.date) {
          throw new Error("D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá! M·ªôt s·ªë tr∆∞·ªùng b·ªã thi·∫øu.");
        }
      });

      // Th√™m d·ªØ li·ªáu m·ªõi v√†o danh s√°ch hi·ªán t·∫°i
      petArr = [...petArr, ...importedData];

      alert("Import th√†nh c√¥ng! D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t.");
    } catch (error) {
      alert("L·ªói khi nh·∫≠p d·ªØ li·ªáu: " + error.message);
    }
  };

  reader.readAsText(file);
});
